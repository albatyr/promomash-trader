// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Promomash.Trader.UserAccess.Infrastructure;

#nullable disable

namespace Promomash.Trader.UserAccess.Infrastructure.Migrations
{
    [DbContext(typeof(UserAccessContext))]
    [Migration("20250211122836_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Promomash.Trader.UserAccess.Domain.Countries.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Code");

                    b.ToTable("Countries", "users");

                    b.HasData(
                        new
                        {
                            Code = "USA",
                            Name = "United States"
                        },
                        new
                        {
                            Code = "CAN",
                            Name = "Canada"
                        });
                });

            modelBuilder.Entity("Promomash.Trader.UserAccess.Domain.Countries.Province", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("Provinces", "users");

                    b.HasData(
                        new
                        {
                            Id = "USA:CA",
                            CountryCode = "USA",
                            Name = "California"
                        },
                        new
                        {
                            Id = "USA:TX",
                            CountryCode = "USA",
                            Name = "Texas"
                        },
                        new
                        {
                            Id = "USA:NY",
                            CountryCode = "USA",
                            Name = "New York"
                        },
                        new
                        {
                            Id = "USA:FL",
                            CountryCode = "USA",
                            Name = "Florida"
                        },
                        new
                        {
                            Id = "CAN:ON",
                            CountryCode = "CAN",
                            Name = "Ontario"
                        },
                        new
                        {
                            Id = "CAN:QC",
                            CountryCode = "CAN",
                            Name = "Quebec"
                        },
                        new
                        {
                            Id = "CAN:BC",
                            CountryCode = "CAN",
                            Name = "British Columbia"
                        },
                        new
                        {
                            Id = "CAN:AB",
                            CountryCode = "CAN",
                            Name = "Alberta"
                        });
                });

            modelBuilder.Entity("Promomash.Trader.UserAccess.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsAgreedToWorkForFood")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.HasKey("Id");

                    b.ToTable("Users", "users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("018f9b8e-95e2-7a40-b43a-7057c1c5d4e0"),
                            Email = "admin@example.com",
                            IsAgreedToWorkForFood = true,
                            Login = "admin@example.com",
                            Password = "AGYjn9TRYyKoR8TlVqo6jdD64ObqSYwIqLsXXA4iOAukGYSl3Zizeqatrsq+pdqHLQ==",
                            ProvinceId = "USA:CA"
                        });
                });

            modelBuilder.Entity("Promomash.Trader.UserAccess.Domain.Countries.Province", b =>
                {
                    b.HasOne("Promomash.Trader.UserAccess.Domain.Countries.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
